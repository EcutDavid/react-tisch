{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 5a77f26d4deb2bbe253b","webpack:///./src/index.jsx","webpack:///./src/TableController.jsx","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./src/TablePresentation.jsx","webpack:///external {\"root\":\"ReactBootstrap\",\"commonjs2\":\"react-bootstrap\",\"commonjs\":\"react-bootstrap\",\"amd\":\"react-bootstrap\"}","webpack:///./src/Filter.jsx","webpack:///./src/TableHeader.jsx","webpack:///./src/Body.jsx","webpack:///./src/DataManager.js","webpack:///external {\"root\":\"ReactDOM\",\"commonjs2\":\"react-dom\",\"commonjs\":\"react-dom\",\"amd\":\"react-dom\"}","webpack:///./src/Column.jsx"],"names":["Table","Column","DataManager","TableController","state","selectedFilters","sortColumn","sortOrder","itemsPerPage","activePage","searchText","selectedRows","canSelectRows","forcedRedrawData","props","dataManager","data","columns","Children","toArray","children","initialize","onDataUpdate","bind","setState","nextProps","updateStateFromProps","initialState","newState","_setState","itemCount","Math","ceil","newData","getData","filterOptions","pageCount","onSearch","onSort","onFilter","onPageSelect","onItemsPerPageSelect","onRowSelection","visibleRows","Component","propTypes","PropTypes","array","object","node","isRequired","TablePresentation","event","columnIndex","slice","target","value","parseInt","rowIndex","selected","column","i","filter","onFilterChange","map","filters","onRowToggle","shownEntriesText","number","string","func","onRowSelected","Filter","onChange","width","TableHeader","child","cloneElement","key","onToggleSort","Cell","rowData","fn","Row","row","index","Body","componentToText","component","isValidElement","div","document","createElement","render","innerHTML","replace","getRawCellValue","rawValue","onNewDataReceived","precomputeDerivedData","valuesByColumn","uniqueValues","Object","valuesByRow","j","push","forEach","values","sort","a","b","keys","length","searchWords","toLowerCase","split","rowWords","join","searchWord","indexOf","textValues","filterValue","undefined","sortedValues","sortedRowIndexes","sortedAndFilteredRowIndexes","doesRowMatchFilters","doesRowMatchSearch","paginatedRows","getVisibleRows","sortGlyphs"],"mappings":"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","file":"react-tisch.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-bootstrap\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ReactTisch\", [\"react\", \"react-bootstrap\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactTisch\"] = factory(require(\"react\"), require(\"react-bootstrap\"), require(\"react-dom\"));\n\telse\n\t\troot[\"ReactTisch\"] = factory(root[\"React\"], root[\"ReactBootstrap\"], root[\"ReactDOM\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_9__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5a77f26d4deb2bbe253b","import Table from \"./TableController\";\nimport Column from \"./Column\";\nimport DataManager from \"./DataManager\";\n\nexport {Table};\nexport {Column};\nexport {DataManager};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.jsx","import React from \"react\";\nimport TablePresentation from \"./TablePresentation\";\nimport DataManager from \"./DataManager\";\n\n\nclass TableController extends React.Component {\n    state = {\n        selectedFilters: [],\n        sortColumn: 0,\n        sortOrder: 1,\n        itemsPerPage: 25,\n        activePage: 1,\n        searchText: '',\n        selectedRows: {},\n        canSelectRows: false,\n        forcedRedrawData: null\n    };\n\n    static propTypes = {\n        data: React.PropTypes.array,\n        dataManager: React.PropTypes.object,\n        children: React.PropTypes.node.isRequired,\n        initialState: React.PropTypes.object\n    };\n\n    updateStateFromProps(props) {\n        let dataManager = props.dataManager || (new DataManager(props.data || [])),\n            columns = React.Children.toArray(this.props.children);\n        dataManager.initialize(columns, this.onDataUpdate.bind(this));\n        this.setState({dataManager});\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.updateStateFromProps(nextProps);\n    }\n\n    componentWillMount() {\n        if (this.props.initialState) {\n            this.setState(this.props.initialState);\n        }\n\n        this.updateStateFromProps(this.props);\n    }\n\n    _setState(newState) {\n        this.setState({\n            forcedRedrawData: null,\n            ...newState\n        });\n    }\n\n    onSort(sortColumn, sortOrder) {\n        this._setState({sortColumn, sortOrder});\n    }\n\n    onFilter(selectedFilters) {\n        this._setState({selectedFilters});\n    }\n\n    onPageSelect(activePage) {\n        this._setState({activePage});\n    }\n\n    onSearch(searchText) {\n        this._setState({searchText});\n    }\n\n    onItemsPerPageSelect(itemsPerPage) {\n        this._setState({itemsPerPage});\n    }\n\n    onRowSelection(selectedRows) {\n        if (this.state.canSelectRows) {\n            this._setState({selectedRows});\n        }\n    }\n\n    pageCount(itemCount) {\n        let {itemsPerPage} = this.state;\n        return Math.ceil(itemCount / itemsPerPage);\n    }\n\n    onDataUpdate(newData) {\n        this.setState({\n            forcedRedrawData: newData\n        });\n    }\n\n    render() {\n        let data = this.state.forcedRedrawData ||\n            this.state.dataManager.getData(this.state);\n\n\n        return (\n            <TablePresentation\n                filterOptions={data.filterOptions}\n                sortColumn={this.state.sortColumn}\n                sortOrder={this.state.sortOrder}\n                selectedFilters={this.state.selectedFilters}\n                activePage={this.state.activePage}\n                searchText={this.state.searchText}\n                pageCount={this.pageCount(data.itemCount)}\n                itemsPerPage={this.state.itemsPerPage}\n                selectedRows={this.state.selectedRows}\n                itemCount={data.itemCount}\n\n                onSearch={this.onSearch.bind(this)}\n                onSort={this.onSort.bind(this)}\n                onFilter={this.onFilter.bind(this)}\n                onPageSelect={this.onPageSelect.bind(this)}\n                onItemsPerPageSelect={this.onItemsPerPageSelect.bind(this)}\n                onRowSelection={this.onRowSelection.bind(this)}\n\n                visibleRows={data.visibleRows}\n            >\n                {this.props.children}\n            </TablePresentation>\n        );\n    }\n}\n\nexport default TableController;\n\n\n\n// WEBPACK FOOTER //\n// ./src/TableController.jsx","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 2\n// module chunks = 0","import React from \"react\";\nimport {Table, Pagination, FormControl, Col, Row, Grid} from \"react-bootstrap\";\n\nimport Filter from \"./Filter\";\nimport TableHeader from \"./TableHeader\";\nimport Body from \"./Body\";\n\n\nclass TablePresentation extends React.Component {\n    static propTypes = {\n        children: React.PropTypes.node,\n\n        pageCount: React.PropTypes.number,\n        activePage: React.PropTypes.number,\n        filterOptions: React.PropTypes.array,\n        sortColumn: React.PropTypes.number,\n        sortOrder: React.PropTypes.number,\n        selectedFilters: React.PropTypes.array,\n        searchText: React.PropTypes.string,\n        itemsPerPage: React.PropTypes.number,\n        itemCount: React.PropTypes.number,\n        selectedRows: React.PropTypes.object,\n\n        visibleRows: React.PropTypes.array,\n\n        onSearch: React.PropTypes.func,\n        onPageSelect: React.PropTypes.func,\n        onSort: React.PropTypes.func,\n        onFilter: React.PropTypes.func,\n        onItemsPerPageSelect: React.PropTypes.func,\n        onRowSelected: React.PropTypes.func\n    };\n\n    onFilterChange(event, columnIndex) {\n        let selectedFilters = this.props.selectedFilters.slice(); // create a copy: can't mutate props\n        selectedFilters[columnIndex] = event.target.value;\n        this.props.onFilter(selectedFilters);\n    }\n\n    onSearch(event) {\n        this.props.onSearch(event.target.value);\n    }\n\n    onItemsPerPageSelect(event) {\n        this.props.onItemsPerPageSelect(parseInt(event.target.value));\n    }\n\n    onRowToggle(rowIndex, selected) {\n        let selectedRows = {\n            ...this.props.selectedRows,\n            [rowIndex]: selected\n        };\n        this.props.onRowSelection(selectedRows);\n    }\n\n    filter(column, i) {\n        let filterOptions = this.props.filterOptions[i] || [];\n\n        return <Filter\n            key={i}\n            filter={column.props.filter}\n            filterOptions={filterOptions}\n            onChange={event => this.onFilterChange(event, i)}\n        />;\n    }\n\n    filters() {\n        let {children} = this.props;\n        return React.Children.map(children, this.filter.bind(this));\n    }\n\n    shownEntriesText() {\n        let {itemsPerPage, itemCount, activePage} = this.props;\n        if (itemCount <= itemsPerPage) {\n            return `Showing ${itemCount} of ${itemCount} entries`;\n        }\n\n        return `Showing ${(activePage - 1) * itemsPerPage + 1} to ${activePage * itemsPerPage} of ${itemCount} entries`;\n    }\n\n    render() {\n        let filters = this.filters(),\n            {pageCount, activePage, onPageSelect, searchText, sortColumn, sortOrder, onSort, visibleRows,\n            selectedRows} = this.props,\n            columns = React.Children.toArray(this.props.children);\n\n        return (\n            <Grid className=\"form-inline\">\n                <Row>\n                    <Col md={6}>\n                        Show{' '}\n                        <FormControl componentClass=\"select\" placeholder=\"select\" defaultValue=\"25\"\n                                     className=\"input-sm select-entry-count\"\n                                     onChange={this.onItemsPerPageSelect.bind(this)}>\n                            <option value=\"10\">10</option>\n                            <option value=\"25\">25</option>\n                            <option value=\"50\">50</option>\n                            <option value=\"100\">100</option>\n                        </FormControl>\n                        {' '}entries\n                    </Col>\n                    <Col md={6}>\n                        <div className=\"pull-right\">\n                            Search:{' '}\n                            <FormControl\n\n                                type=\"text\"\n                                value={searchText}\n                                placeholder=\"\"\n                                onChange={this.onSearch.bind(this)}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={12}>\n                        <Table className=\"table text-center table-condensed table-hover\" cellSpacing=\"0\"\n                               id=\"data-table\">\n                            <thead>\n                            <TableHeader\n                                onSort={onSort}\n                                sortColumn={sortColumn}\n                                sortOrder={sortOrder}\n                                columns={columns}/>\n                            <tr>\n                                {filters}\n                            </tr>\n                            </thead>\n                            <Body\n                                visibleRows={visibleRows}\n                                selectedRows={selectedRows}\n                                onRowToggle={this.onRowToggle.bind(this)}\n                                columns={columns}/>\n                        </Table>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col md={6} className=\"shown-entries\">\n                        {this.shownEntriesText()}\n                    </Col>\n                    <Col md={6}>\n                        <div className=\"pull-right\">\n                            <Pagination\n                                prev\n                                next\n                                ellipsis\n                                boundaryLinks\n                                items={pageCount}\n                                maxButtons={5}\n                                activePage={activePage}\n                                onSelect={onPageSelect}/>\n                        </div>\n                    </Col>\n                </Row>\n            </Grid>\n        );\n    }\n}\n\n\n\nexport default TablePresentation;\n\n\n// WEBPACK FOOTER //\n// ./src/TablePresentation.jsx","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"ReactBootstrap\",\"commonjs2\":\"react-bootstrap\",\"commonjs\":\"react-bootstrap\",\"amd\":\"react-bootstrap\"}\n// module id = 4\n// module chunks = 0","import React from \"react\";\n\nconst Filter = ({filter, filterOptions, onChange}) => (\n    filter ?\n        <th className=\"text-center\">\n            <select name=\"\" id=\"\" onChange={onChange} style={{width: '100%'}}>\n                <option value=\"\"/>\n                {filterOptions.map(value =>\n                    <option key={value} value={value}>{value}</option>)}\n            </select>\n        </th> :\n        <th/>\n);\n\nexport default Filter;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Filter.jsx","import React from \"react\";\n\nclass TableHeader extends React.Component {\n\n    onToggleSort(columnIndex) {\n        let sortOrder = columnIndex === this.props.sortColumn ? -this.props.sortOrder : 1;\n        this.props.onSort(columnIndex, sortOrder);\n    }\n\n    render() {\n        let {columns, sortColumn, sortOrder} = this.props;\n\n        return <tr>{columns.map((child, i) => React.cloneElement(child, {\n            key: i,\n            onToggleSort: () => this.onToggleSort(i),\n            sortOrder: sortColumn === i ? sortOrder : 0,\n            ...child.props\n        }))}</tr>;\n    }\n}\n\nexport default TableHeader;\n\n\n\n// WEBPACK FOOTER //\n// ./src/TableHeader.jsx","import React from \"react\";\n\nconst Cell = ({rowData, column}) => {\n    let fn = column.props.value;\n    return <td>{fn ? fn(rowData) : ''}</td>;\n};\n\nconst Row = ({columns, row, selected, onRowToggle}) =>\n    <tr className={selected ? 'info': ''} onClick={() => onRowToggle(row.index, !selected)}>{\n        columns.map((column, i) => <Cell rowData={row.data} column={column} key={i}/>)\n    }</tr>;\n\nconst Body = ({visibleRows, columns, selectedRows, onRowToggle}) =>\n    <tbody>\n    {visibleRows.map((row, i) => <Row key={i} row={row} columns={columns} selected={!!selectedRows[row.index]}\n                                      onRowToggle={onRowToggle} />)}\n    </tbody>;\n\nBody.Row = Row;\nBody.Cell = Cell;\n\nexport default Body;\n\n\n// WEBPACK FOOTER //\n// ./src/Body.jsx","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nfunction componentToText(component) {\n    if (!React.isValidElement(component)) {\n        return component;\n    }\n    let div = document.createElement(\"DIV\");\n    ReactDOM.render(component, div);\n    return div.innerHTML.replace(/<\\/?[^>]+(>|$)/g, \"\");\n}\n\n\nfunction getRawCellValue(column, row) {\n    if (column.props.rawValue) {\n        return column.props.rawValue(row);\n    } else if (column.props.value) {\n        return componentToText(column.props.value(row));\n    }\n    return null;\n}\n\n\nclass DataManager {\n    constructor(data) {\n        this.data = data;\n        this.columns = null;\n        this.onNewDataReceived = null;\n    }\n\n    initialize(columns, onNewDataReceived) {\n        /*\n        This method is called by react-tisch once the table is initialized.\n        columns is a list of react element of type Column\n         */\n        this.columns = columns;\n        this.onNewDataReceived = onNewDataReceived;\n        this.precomputeDerivedData();\n    }\n\n    precomputeDerivedData() {\n        // Pre-compute value representations that are convenient for sorting and filtering\n        if (!this.columns || !this.data)\n            return;\n\n        let valuesByColumn = this.columns.map(() => []),\n            uniqueValues = this.columns.map(() => Object()),\n            valuesByRow;\n\n        valuesByRow = this.data.map(function (row, i) {\n            return this.columns.map(function (column, j) {\n                let value = getRawCellValue(column, row);\n                valuesByColumn[j].push({\n                    rowIndex: i,\n                    value: value\n                });\n                uniqueValues[j][value] = 1;\n                return value;\n            });\n        }.bind(this));\n\n        valuesByColumn.forEach(values => values.sort(\n            (a, b) => a.value < b.value ? -1 : (a.value > b.value ? 1 : 0))\n        );\n\n        uniqueValues = uniqueValues.map(values => Object.keys(values));\n\n        this.itemCount = this.data.length;\n        this.valuesByColumn = valuesByColumn;\n        this.valuesByRow = valuesByRow;\n        this.uniqueValues = uniqueValues;\n    }\n\n    doesRowMatchSearch(rowIndex, searchText) {\n        let searchWords = searchText.toLowerCase().split(/\\s+/g),\n            rowWords = this.valuesByRow[rowIndex].join(\" \").toLowerCase().split(/\\s+/g);\n\n        for (let j = 0; j < searchWords.length; j++) {\n            let searchWord = searchWords[j],\n                i;\n            for (i = 0; i < rowWords.length; i++) {\n                if (rowWords[i].indexOf(searchWord) >= 0) {\n                    break;\n                }\n            }\n            if (i === rowWords.length) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    doesRowMatchFilters(rowIndex, selectedFilters) {\n        let textValues = this.valuesByRow[rowIndex];\n\n        for (let i = 0; i < textValues.length; i++) {\n            let filterValue = selectedFilters[i];\n            if (filterValue !== '' && filterValue !== undefined && filterValue != textValues[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    sortedRowIndexes(sortColumn, sortOrder) {\n        let sortedValues = this.valuesByColumn[sortColumn] || [],\n            sortedRowIndexes = [];\n        if (sortOrder === 1) {\n            for (let i = 0; i < sortedValues.length; i++) {\n                sortedRowIndexes.push(sortedValues[i].rowIndex);\n            }\n        } else {\n            for (let i = sortedValues.length - 1; i >= 0; i--) {\n                sortedRowIndexes.push(sortedValues[i].rowIndex);\n            }\n        }\n        return sortedRowIndexes;\n    }\n\n    paginatedRows(sortedAndFilteredRowIndexes, activePage, itemsPerPage) {\n        let data = this.data;\n\n        return sortedAndFilteredRowIndexes\n            .slice((activePage - 1) * itemsPerPage, activePage * itemsPerPage)\n            .map(rowIndex => ({\n                index: rowIndex,\n                data: data[rowIndex]\n            }));\n    }\n\n    getVisibleRows({selectedFilters, sortColumn, sortOrder, itemsPerPage, activePage, searchText}) {\n        let sortedAndFilteredRowIndexes = this.sortedRowIndexes(sortColumn, sortOrder)\n                .filter(rowIndex => this.doesRowMatchFilters(rowIndex, selectedFilters))\n                .filter(rowIndex => this.doesRowMatchSearch(rowIndex, searchText));\n\n        return this.paginatedRows(sortedAndFilteredRowIndexes, activePage, itemsPerPage);\n    }\n\n    getData(state) {\n        /*\n         * Required public member of DataManager.\n         * It doesn't have to return data: for an async data manager, it can call the onNewDataReceived callback\n         * passed in the `initialize` method.\n         */\n        return {\n            visibleRows: this.getVisibleRows(state),\n            itemCount: this.itemCount,\n            filterOptions: this.uniqueValues\n        };\n    }\n}\n\nexport default DataManager;\n\n\n\n// WEBPACK FOOTER //\n// ./src/DataManager.js","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"ReactDOM\",\"commonjs2\":\"react-dom\",\"commonjs\":\"react-dom\",\"amd\":\"react-dom\"}\n// module id = 9\n// module chunks = 0","import {Glyphicon} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst sortGlyphs = {\n    0: 'sort',\n    1: 'sort-by-attributes',\n    '-1': 'sort-by-attributes-alt'\n};\n\nexport default ({children, onToggleSort, sortOrder}) =>\n    <th className=\"text-center\" onClick={onToggleSort}>\n        {children}{' '}\n        <Glyphicon glyph={sortGlyphs[sortOrder]}/>\n    </th>;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Column.jsx"],"sourceRoot":""}